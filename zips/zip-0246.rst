::

  ZIP: 246
  Title: Digests for the Version 6 Transaction Format
  Owners: Arya <arya@zfnd.org>
          Conrado Gouvea <conrado@zfnd.org>
          Daira-Emma Hopwood <daira-emma@electriccoin.co>
          Jack Grigg <str4d@electriccoin.co>
          Kris Nuttycombe <kris@electriccoin.co>
  Status: Draft
  Category: Consensus
  Created: 2025-02-12
  License: MIT


===========
Terminology
===========

The key words "MUST" and "MUST NOT" in this document are to be interpreted as described
in BCP 14 [#BCP14]_ when, and only when, they appear in all capitals.

The terms "consensus branch", "epoch", and "network upgrade" in this document are to be
interpreted as described in ZIP 200. [#zip-0200]_

The term "field encoding" refers to the binary serialized form of a Zcash transaction
field, as specified in section 7.1 of the Zcash protocol specification
[#protocol-txnencoding]_.


========
Abstract
========

This ZIP defines the digest algorithms associated with the v6 transaction format.

This proposal also defines the new concept of "sighash versioning": where previously
each transaction version had a single associated digest algorithm, going forward it
will be possible for signers to use any digest algorithm within the closed set
specified for a given transaction version (and made available in consensus via network
upgrades).


==========
Motivation
==========

TBD

TODO: Motivate sighash versioning


============
Requirements
============

- Continue to support existing functionality of the protocol (multisig,
  signing modes for transparent inputs).

- It should be possible to update this ZIP with additional digest versions after the first
  version has been deployed in a network upgrade.


================
Non-requirements
================

TBD


=============
Specification
=============

------------------
Sighash versioning
------------------

Rough summary:

- Sighash versions are numbered starting from 0 for each tx version.
- v0 is by convention the "commit to everything" sighash digest. Other versions can commit to whatever makes sense for desired functionality within that tx version.
- Have a single byte encoded alongside the signature (not appended the way transparent does) that permits the signer to specify which sighash version they are using.
- Consensus rules choose the digest algorithm for each signer based on that byte.

----------
v0 Digests
----------

TBD


TxId Digest
===========

The transaction digest algorithm defined in ZIP 244 [#zip-0244]_ is modified by the OrchardZSA protocol to add a new branch for issuance information, along with replacement of the ``orchard_digest`` with a new ``orchard_zsa_digest`` to account for the inclusion of the Asset Base and the updated transaction format.
The details of these changes are described in this section. We omit the details of the sections that do not change for the OrchardZSA protocol.

The overall structure of the hash is as follows; each name referenced here will be described in detail below::

    issuance_digest
    ├── issue_actions_digest
    │   ├── issue_notes_digest
    │   ├── assetDescription
    │   └── flagsIssuance
    └── issuanceValidatingKey

In the specification below, nodes of the tree are presented in depth-first order.

txid_digest
-----------
A BLAKE2b-256 hash of the following values::

   T.1: header_digest       (32-byte hash output)
   T.2: transparent_digest  (32-byte hash output)
   T.3: sapling_digest      (32-byte hash output)
   T.4: orchard_digest      (32-byte hash output)
   T.5: issuance_digest     (32-byte hash output)

The personalization field remains the same as in ZIP 244 [#zip-0244]_.

T.4: orchard_digest
```````````````````
When OrchardZSA Actions Groups are present in the transaction, this digest is a BLAKE2b-256 hash of the following values::

    T.4a: orchard_action_groups_digest   (32-byte hash output)
    T.4b: orchard_burn_digest            (32-byte hash output)
    T.4c: valueBalanceOrchard            (64-bit signed little-endian)

The personalization field of this hash is the same as for ``orchard_digest`` in ZIP 244 [#zip-0244]_ ::

    "ZTxIdOrchardHash"

In the case that the transaction has no OrchardZSA Action Groups, ``orchard_digest`` is ::

    BLAKE2b-256("ZTxIdOrchardHash", [])

T.4a: orchard_action_groups_digest
''''''''''''''''''''''''''''''''''

A BLAKE2b-256 hash of the subset of OrchardZSA Action Groups information for all OrchardZSA Action Groups belonging to the transaction.
For each Action Group, the following elements are included in the hash::

    T.4a.i   : orchard_actions_compact_digest      (32-byte hash output)
    T.4a.ii  : orchard_actions_memos_digest        (32-byte hash output)
    T.4a.iii : orchard_actions_noncompact_digest   (32-byte hash output)
    T.4a.iv  : flagsOrchard                        (1 byte)
    T.4a.v   : anchorOrchard                       (32 bytes)
    T.4a.vi  : nAGExpiryHeight                     (4 bytes)

The personalization field of this hash is set to::

    "ZTxIdOrcActGHash"

T.4a.i: orchard_actions_compact_digest
......................................

A BLAKE2b-256 hash of the subset of OrchardZSA Action information intended to be included in
an updated version of the ZIP-307 [#zip-0307]_ ``CompactBlock`` format for all OrchardZSA
Actions belonging to the Action Group. For each Action, the following elements are included
in the hash::

   T.4a.i.1 : nullifier            (field encoding bytes)
   T.4a.i.2 : cmx                  (field encoding bytes)
   T.4a.i.3 : ephemeralKey         (field encoding bytes)
   T.4a.i.4 : encCiphertext[..84]  (First 84 bytes of field encoding)

The personalization field of this hash is the same as for ``orchard_actions_compact_digest`` in ZIP 244::

  "ZTxIdOrcActCHash"

The field encodings are specified in ZIP 230 [#zip-0230-orchard-action-field-encodings]_.


T.4a.ii: orchard_zsa_actions_memos_digest
.........................................

A BLAKE2b-256 hash of the subset of Orchard shielded memo field data for all OrchardZSA
Actions belonging to the Action Group. For each Action, the following elements are included
in the hash::

    T.4a.ii.1: encCiphertext[84..596] (contents of the encrypted memo field)  

The personalization field of this hash is identical to that for ``orchard_actions_memos_digest`` in ZIP 244::

  "ZTxIdOrcActMHash"

The field encodings are specified in ZIP 230 [#zip-0230-orchard-action-field-encodings]_.

T.4a.iii: orchard_actions_noncompact_digest
...........................................

A BLAKE2b-256 hash of the remaining subset of OrchardZSA Action information **not** intended
for inclusion in an updated version of the the ZIP 307 [#zip-0307]_ ``CompactBlock``
format, for all OrchardZSA Actions belonging to the Action Group. For each Action,
the following elements are included in the hash::

   T.4a.iii.1 : cv                    (field encoding bytes)
   T.4a.iii.2 : rk                    (field encoding bytes)
   T.4a.iii.3 : encCiphertext[596..]  (post-memo suffix of field encoding)
   T.4a.iii.4 : outCiphertext         (field encoding bytes)

The personalization field of this hash is defined just as for ``orchard_actions_noncompact_digest`` in ZIP 244::

    "ZTxIdOrcActNHash"

The field encodings are specified in ZIP 230 [#zip-0230-orchard-action-field-encodings]_.


T.4b: orchard_burn_digest
'''''''''''''''''''''''''

A BLAKE2b-256 hash of the data from the burn fields of the transaction. For each tuple in 
the $\mathsf{assetBurn}$ set, the following elements are included in the hash::

    T.4b.i : assetBase    (field encoding bytes)
    T.4b.ii: valueBurn    (64-bit unsigned little-endian)

The personalization field of this hash is set to::

    "ZTxIdOrcBurnHash"

In case the transaction does not perform the burning of any Assets (i.e. the 
$\mathsf{assetBurn}$ set is empty), the ``orchard_burn_digest`` is::

    BLAKE2b-256("ZTxIdOrcBurnHash", [])

The field encodings are specified in ZIP 230 [#zip-0230-orchard-asset-burn-field-encodings]_.


T.5: issuance_digest
````````````````````
A BLAKE2b-256 hash of the following values ::

   T.5a: issue_actions_digest    (32-byte hash output)
   T.5b: issuanceValidatingKey   (field encoding bytes)

The personalization field of this hash is set to::

  "ZTxIdSAIssueHash"

In case the transaction has no issuance components, ``issuance_digest`` is::

    BLAKE2b-256("ZTxIdSAIssueHash", [])

The field encodings are specified in ZIP 230 [#zip-0230-transaction-field-encodings]_.

T.5a: issue_actions_digest
''''''''''''''''''''''''''
A BLAKE2b-256 hash of Issue Action information for all Issuance Actions belonging to the transaction. For each Action, the following elements are included in the hash::

   T.5a.i  : notes_digest            (32-byte hash output)
   T.5a.ii : assetDescHash           (field encoding bytes)
   T.5a.iii: flagsIssuance           (1 byte)

The personalization field of this hash is set to::

  "ZTxIdIssuActHash"

The field encodings are specified in ZIP 230 [#zip-0230-issue-actions-field-encodings]_.

T.5a.i: issue_notes_digest
..........................
A BLAKE2b-256 hash of Note information for all Notes belonging to the Issuance Action. For each Note, the following elements are included in the hash::

   T.5a.i.1: recipient                    (field encoding bytes)
   T.5a.i.2: value                        (field encoding bytes)
   T.5a.i.3: rho                          (field encoding bytes)
   T.5a.i.4: rseed                        (field encoding bytes)

The personalization field of this hash is set to::

  "ZTxIdIAcNoteHash"

In case the transaction has no Issue Notes, ``issue_notes_digest`` is::

    BLAKE2b-256("ZTxIdIAcNoteHash", [])

The field encodings are specified in ZIP 230 [#zip-0230-issue-notes-field-encodings]_.


Signature Digest
================

The per-input transaction digest algorithm to generate the signature digest in ZIP 244 [#zip-0244-sigdigest]_ is modified so that a signature digest is produced for each transparent input, each Sapling input, each OrchardZSA Action, and additionally for each Issuance Action.
The modifications replace the ``orchard_digest`` in ZIP 244 with a new ``orchard_digest``, and add a new branch, ``issuance_digest``, for the Issuance Action information.

The overall structure of the hash is as follows. We omit the descriptions of the sections that do not change for the OrchardZSA protocol::

    signature_digest
    ├── header_digest
    ├── transparent_sig_digest
    ├── sapling_digest
    ├── orchard_digest
    └── issuance_digest

signature_digest
----------------
A BLAKE2b-256 hash of the following values ::

   S.1: header_digest          (32-byte hash output)
   S.2: transparent_sig_digest (32-byte hash output)
   S.3: sapling_digest         (32-byte hash output)
   S.4: orchard_digest         (32-byte hash output)
   S.5: issuance_digest        (32-byte hash output)

The personalization field remains the same as in ZIP 244 [#zip-0244]_, namely::

  "ZcashTxHash_" || CONSENSUS_BRANCH_ID

``ZcashTxHash_`` has 1 underscore character.

S.4: orchard_digest
```````````````````
Identical to that specified for the transaction identifier.

S.5: issuance_digest
````````````````````
Identical to the ``issuance_digest`` specified for the transaction identifier in ZIP 227 [zip-0227-txiddigest]_.


Authorizing Data Commitment
===========================

The transaction digest algorithm defined in ZIP 244 [#zip-0244-authcommitment]_ which commits to the authorizing data of a transaction is modified by the OrchardZSA protocol to have the structure specified in this section.
There is a new branch added for issuance information, and the ``orchard_auth_digest`` in ZIP 244 is replaced with ``orchard_auth_digest`` to account for the presence of Action Groups.

We omit the descriptions of the sections that do not change for the OrchardZSA protocol::

    auth_digest
    ├── transparent_scripts_digest
    ├── sapling_auth_digest
    ├── orchard_auth_digest
    └── issuance_auth_digest

The pair (Transaction Identifier, Auth Commitment) constitutes a commitment to all the data of a serialized transaction that may be included in a block.

auth_digest
-----------
A BLAKE2b-256 hash of the following values ::

   A.1: transparent_scripts_digest (32-byte hash output)
   A.2: sapling_auth_digest        (32-byte hash output)
   A.3: orchard_auth_digest        (32-byte hash output)
   A.4: issuance_auth_digest       (32-byte hash output)

The personalization field of this hash remains the same as in ZIP 244.


A.3: orchard_auth_digest
````````````````````````

In the case that OrchardZSA Action Groups are present, this is a BLAKE2b-256 hash of the following values::

    A.3a: orchard_action_groups_auth_digest  (32-byte hash output)
    A.3b: bindingSigOrchard                      (field encoding bytes)

The personalization field of this hash is the same as in ZIP 244, that is::

    "ZTxAuthOrchaHash"

In case that the transaction has no OrchardZSA Action Groups, ``orchard_auth_digest`` is::

    BLAKE2b-256("ZTxAuthOrchaHash", [])

The field encodings are specified in ZIP 230 [#zip-0230-transaction-field-encodings]_.

A.3a: orchard_action_groups_auth_digest
'''''''''''''''''''''''''''''''''''''''

This is a BLAKE2b-256 hash of the ``proofsOrchard`` field of all OrchardZSA Action Groups belonging to the transaction; followed by the ``spendAuthSigsOrchard`` fields corresponding to every OrchardZSA Action in the OrchardZSA Action Group, for all OrchardZSA Action Groups belonging to the transaction::

    A.3a.i:  proofsOrchard               (field encoding bytes)
    A.3a.ii: spendAuthSigsOrchard        (field encoding bytes)

The personalization field of this hash is set to::

    "ZTxAuthOrcAGHash"

The field encodings are specified in ZIP 230 [#zip-0230-orchard-action-group-field-encodings]_.

A.4: issuance_auth_digest
-------------------------

In the case that Issuance Actions are present, this is a BLAKE2b-256 hash of the field encoding of the ``issueAuthSig`` field of the transaction::

   A.4a: issueAuthSig            (field encoding bytes)

The personalization field of this hash is set to::

  "ZTxAuthZSAOrHash"

In the case that the transaction has no Orchard Actions, ``issuance_auth_digest`` is ::

  BLAKE2b-256("ZTxAuthZSAOrHash", [])

The field encodings are specified in ZIP 230 [#zip-0230-transaction-field-encodings]_.


=========
Rationale
=========

TBD


========================
Reference implementation
========================

TBD


==========
References
==========

.. [#BCP14] `Information on BCP 14 — "RFC 2119: Key words for use in RFCs to Indicate Requirement Levels" and "RFC 8174: Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words" <https://www.rfc-editor.org/info/bcp14>`_
.. [#protocol] `Zcash Protocol Specification, Version 2024.5.1 or later [NU6] <protocol/protocol.pdf>`_
.. [#protocol-spenddesc] `Zcash Protocol Specification, Version 2024.5.1 [NU6]. Section 4.4: Spend Descriptions <protocol/protocol.pdf#spenddesc>`_
.. [#protocol-outputdesc] `Zcash Protocol Specification, Version 2024.5.1 [NU6]. Section 4.5: Output Descriptions <protocol/protocol.pdf#outputdesc>`_
.. [#protocol-actiondesc] `Zcash Protocol Specification, Version 2024.5.1 [NU6]. Section 4.6: Action Descriptions <protocol/protocol.pdf#actiondesc>`_
.. [#protocol-txnencoding] `Zcash Protocol Specification, Version 2022.3.8. Section 7.1: Transaction Encoding and Consensus <protocol/protocol.pdf#txnencoding>`_
.. [#zip-0200] `ZIP 200: Network Upgrade Mechanism <zip-0200.rst>`_
.. [#zip-0230-transaction-field-encodings] `ZIP 230: Version 6 Transaction Format. Specification: Transaction Format <zip-0230.rst#transaction-format>`_
.. [#zip-0230-orchard-action-group-field-encodings] `ZIP 230: Version 6 Transaction Format. Specification: OrchardZSA Action Group Description  <zip-0230.rst#orchardzsa-action-group-description>`_
.. [#zip-0230-orchard-action-field-encodings] `ZIP 230: Version 6 Transaction Format. Specification: OrchardZSA Action Description <zip-0230.rst#orchardzsa-action-description>`_
.. [#zip-0230-orchard-asset-burn-field-encodings] `ZIP 230: Version 6 Transaction Format. Specification: OrchardZSA Asset Burn Description <zip-0230.rst#orchardzsa-asset-burn-description>`_
.. [#zip-0230-issue-actions-field-encodings] `ZIP 230: Version 6 Transaction Format. Specification: Issuance Action Description <zip-0230.rst#issuance-action-description>`_
.. [#zip-0230-issue-notes-field-encodings] `ZIP 230: Version 6 Transaction Format. Specification: Issue Note Description <zip-0230.rst#issue-note-description>`_
.. [#zip-0244] `ZIP 244: Transaction Identifier Non-Malleability <zip-0244.rst>`_
.. [#zip-0244-sigdigest] `ZIP 244: Transaction Identifier Non-Malleability: Signature Digest <zip-0244.html#signature-digest>`_
.. [#zip-0244-authcommitment] `ZIP 244: Transaction Identifier Non-Malleability: Authorizing Data Commitment <zip-0244.html#authorizing-data-commitment>`_
